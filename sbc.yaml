tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml
  - http://www.getcloudify.org/spec/fabric-plugin/1.3.1/plugin.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.3.1/plugin.yaml

inputs:

  agent_user:
    default: admin

  sbc_image:
   default: '3d8edfea-f1ba-44cc-93f2-5339ca875d9a'

  flavor:
    default: '3'

  agent_password:
    default: admin

  network_a:
    type: string
    default: Network-A

  network_a_subnet:
    type: string
    default: Network-A-subnet

  network_b:
    type: string
    default: Network-B

  network_b_subnet:
    type: string
    default: Network-B-subnet

  external_network_name:
    type: string
    default: external

  management_network_name:
     type: string
     default: cloudify-management-network

#node_types:
#
#  port_node_type:
#     derived_from: cloudify.nodes.SoftwareComponent

node_templates:

  SBChost:
    type: cloudify.openstack.nodes.Server
    properties:
      install_agent: false
      image:  { get_input: sbc_image }
      flavor: { get_input: flavor }

    relationships:
        - target: network_a
          type: cloudify.relationships.connected_to
        - target: network_b
          type: cloudify.relationships.connected_to
        - target: server_float_ip
          type: cloudify.openstack.server_connected_to_floating_ip

  network_a:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: { get_input: network_a }
      use_external_resource : false

  network_a_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: { get_input: network_a_subnet }
      use_external_resource : false
      subnet:
        ip_version: 4
        cidr: 10.1.0.1/24
    relationships:
      - target: network_a
        type: cloudify.relationships.contained_in

  network_b:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: { get_input: network_b }
      use_external_resource : false

  network_b_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: { get_input: network_a_subnet }
      use_external_resource : false
      subnet:
        ip_version: 4
        cidr: 10.2.0.1/24
    relationships:
      - target: network_b
        type: cloudify.relationships.contained_in

  server_float_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      floatingip:
        floating_network_name: { get_input: external_network_name }

